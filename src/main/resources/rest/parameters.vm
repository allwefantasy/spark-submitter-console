<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <title>任务管理</title>
    #parse("/rest/header.vm")
</head>
<body>
<div class="container">
    #parse("/rest/menu.vm")
    <script src="https://unpkg.com/vuetable-2@1.6.0"></script>
    <style type="text/css">
        #app {
                  font-family: 'Avenir', Helvetica, Arial, sans-serif;
                  -webkit-font-smoothing: antialiased;
                  -moz-osx-font-smoothing: grayscale;
                  text-align: center;
                  color: #2c3e50;
                  margin-top: 60px;
                }

    </style>
</div>
<div id="app">
    <div class="ui container">
        <vuetable ref="vuetable"
                  api-url="https://vuetable.ratiw.net/api/users"
                  :fields="fields"
                  pagination-path=""
                  @vuetable:pagination-data="onPaginationData">
            <template slot="actions" scope="props">
                <div class="table-button-container">
                    <button class="ui button" @click="editRow(props.rowData)"><i class="fa fa-edit"></i> Edit</button>
                    &nbsp;&nbsp;
                    <button class="ui basic red button" @click="deleteRow(props.rowData)"><i class="fa fa-remove"></i>
                        Delete
                    </button>
                    &nbsp;&nbsp;
                </div>
            </template>
        </vuetable>
        <vuetable-pagination ref="pagination"
                             @vuetable-pagination:change-page="onChangePage"
        ></vuetable-pagination>
    </div>
</div>
<script type="application/javascript">
Vue.use(Vuetable);
new Vue({
  el: '#app',
  components:{
   'vuetable-pagination': Vuetable.VuetablePagination
  },
  data: {
  fields: ['name', 'email','birthdate','nickname','gender','__slot:actions']
  },
  computed:{
  /*httpOptions(){
    return {headers: {'Authorization': "my-token"}} //table props -> :http-options="httpOptions"
  },*/
 },
 methods: {
    onPaginationData (paginationData) {
      this.$refs.pagination.setPaginationData(paginationData)
    },
    onChangePage (page) {
      this.$refs.vuetable.changePage(page)
    },
    editRow(rowData){
      alert("You clicked edit on"+ JSON.stringify(rowData))
    },
    deleteRow(rowData){
      alert("You clicked delete on"+ JSON.stringify(rowData))
    }
  }
})



</script>
</body>
</html>